buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'net.researchgate:gradle-release:2.6.0'
    }
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'net.researchgate.release'


release {
    failOnUnversionedFiles = true
    failOnCommitNeeded = true
    failOnPublishNeeded = true
    failOnSnapshotDependencies = false
    failOnUpdateNeeded = true
    revertOnFail = true
    tagTemplate = 'v${version}'
    scmAdapters = [
            net.researchgate.release.GitAdapter
    ]

    git {
        requireBranch = 'master|v3.6.x'
        pushToRemote = 'origin'
        pushToBranchPrefix = ''
        commitVersionFileOnly = false
        signTag = false
    }

}


repositories {
    maven { url 'https://maven.aliyun.com/repository/public/' }
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'joda-time:joda-time:2.10.1'
    implementation 'org.jgroups:jgroups:3.6.20.Final'
    implementation 'org.slf4j:slf4j-api:1.7.7'
    implementation 'commons-logging:commons-logging:1.2'
    implementation 'org.jboss.logging:jboss-logging:3.1.4.GA'
    implementation 'commons-pool:commons-pool:1.6'
    implementation 'com.sleepycat:je:6.0.11'
    implementation 'org.tmatesoft.sqljet:sqljet:1.1.10'
    implementation 'commons-codec:commons-codec:1.9'
    implementation 'com.h2database:h2:1.4.181'
    testImplementation 'junit:junit:4.11'
    testImplementation 'org.mockito:mockito-core:1.10.8'
    testImplementation 'org.hsqldb:hsqldb:2.3.2'
    testImplementation 'org.apache.derby:derby:10.11.1.1'
}

group = 'net.sf.ha-jdbc'
description = 'HA-JDBC'


sourceCompatibility = project.jdkVersion
targetCompatibility = project.jdkVersion

afterReleaseBuild.dependsOn uploadArchives

configurations.all {
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from('src/main/java') {
        include '**/*.properties'
    }
    filter(ReplaceTokens, tokens: [version: project.version])
}

java {
    withSourcesJar()
}

uploadArchives {
    repositories {
//        mavenDeployer {
//            repository(url: "http://${nexus_host}:8081/repository/maven-releases/") {
//                authentication(userName: project.rootProject.username, password: project.rootProject.password)
//            }
//            snapshotRepository(url: "http://${nexus_host}:8081/repository/maven-snapshots/") {
//                authentication(userName: project.rootProject.username, password: project.rootProject.password)
//            }
//        }
    }
}

